using System;
using System.Collections.Generic;
using Jypeli;
using Jypeli.Assets;
using Jypeli.Controls;
using Jypeli.Widgets;
using Jypeli.Effects;

public class IndianaJones : PhysicsGame
{
    /// <summary>
    /// Peli tarkoitus on väistellä isoja lohkareita ja pitää sankari ruudulla mahdollisemman pitkään.
    /// Miten saada peli vaikeutumaan ajan mittaessa peliä?
    /// </summary>
    Image taustaKuva = LoadImage("Taustakuva");
    Image lohkare = LoadImage("lohkare");
    Image hahmo = LoadImage("hahmo");
    Image kultarahat = LoadImage("aarre");


    PhysicsObject Jones;
    PhysicsObject aarre;
    PhysicsObject vihollinenAla;
    PhysicsObject vihollinenYla;
    public Timer aikaLaskuri;

    Vector nopeusOikea = new Vector(200, 0);
    Vector nopeusVasen = new Vector(-80, 0);



    /// <summary>
    /// Pääohjelmassa on kutsut aliohjelmiin.
    /// </summary>
    public override void Begin()
    {
        LuoKentta();
        AsetaOhjain();
        LisaaLohkareita();
        Lohkareita();


        Camera.Follow(Jones);
        Camera.ZoomFactor = 1.0;
        Camera.StayInLevel = true;
        //MediaPlayer.Play("taustamusiikkia");

        Level.Size = new Vector(2048, 1200);
        Level.CreateBorders();
        Level.Background.FitToLevel();
        Level.Background.Image = taustaKuva;

        Timer aikaLaskuri = new Timer();

        double kulunutAika = aikaLaskuri.SecondCounter.Value;
        aikaLaskuri.Start();

        Label aikaNaytto = new Label();
        aikaNaytto.X = Screen.Left + 200;
        aikaNaytto.Y = Screen.Top - 300;
        aikaNaytto.TextColor = Color.Black;
        aikaNaytto.Color = Color.White;
        aikaNaytto.DecimalPlaces = 1;
        aikaNaytto.BindTo(aikaLaskuri.SecondCounter);
        Add(aikaNaytto);

        AjastinLohkareille(RandomGen.NextInt(5, 7), Lohkareita);
        AjastinLohkareille(RandomGen.NextInt(4, 8), LisaaLohkareita);
    }

    /// <summary>
    /// Aliohjelma ajoittaa lohkareiden luonnin.
    /// </summary>
    /// <param name="jakso">Lohkareiden aikaväli, koska lohkareita syntyy.</param>
    /// <param name="kappale">Minkälainen objekti luodaan. Tässä tapauksessa lohkareet.</param>
    void AjastinLohkareille(double jakso, Action kappale)
    {
        Timer ajastin = new Timer();
        ajastin.Interval = jakso;
        ajastin.Timeout += kappale;

    }

    /// <summary>
    /// Aliohjelma pysayttaa kellon.
    /// </summary>
    void PysaytaAikaLaskuri()
    {

        aikaLaskuri.Pause();


    }

    /// <summary>
    /// Antaa pisteistä aarteen nappaamiselle.
    /// </summary>
    /// <param name="pisteet">Pisteiden määrä.</param>
    //void LuoPistelaskuri(int lkm)
    //{
    //    IntMeter pistelaskuri;
    //    pistelaskuri = new IntMeter(0, 0, 400);
    //    //int pisteidenMaara = 0;

    //    Label pisteNaytto = new Label();
    //    pisteNaytto.X = Screen.Left + 200;
    //    pisteNaytto.Y = Screen.Top - 300;
    //    pisteNaytto.TextColor = Color.Black;
    //    pisteNaytto.Color = Color.White;
    //    pisteNaytto.Title = "Pisteet";
    //    for (int i = 0; i < lkm; i++)
    //    {
    //        pistelaskuri.Value += 100;
    //    }
    //    pisteNaytto.BindTo(pistelaskuri);
    //    Add(pisteNaytto);
    //}

    /// <summary>
    /// Luo kentän, jossa on viholliset ja sankari. Mukana on myös poistuminen pelistä Esc-näppäintä painamalla.
    /// </summary>
    void LuoKentta()

    {

        Jones = Sankari(-800.0);
        //aarre = Aarre(-300);
        //aarre = Aarre(-100);
        //aarre = Aarre(125);
        aarre = Aarre(-700);

        Camera.ZoomToLevel();

        //Gravity = new Vector(0, -200);
        PhoneBackButton.Listen(ConfirmExit, "Lopeta peli");
        Keyboard.Listen(Key.Escape, ButtonState.Pressed, ConfirmExit, "Lopeta peli");
    }
    /// <summary>
    /// Lohkareiden luonti kentälle. Laitettu kahden pareissa. Laittaistko enemmän lohkareita?
    /// </summary>
    void LisaaLohkareita()     //Nämä lohkareet tulevat hieman aikaisemmin 
                               //ja myöhemmin kentälle ajastimen avulla.
    {
        double l = 100.0;    //Lohkareen leveys.
        double k = 100.0;    //Lohkareen korkeus.

        VihollinenYla(l, k, -400, (RandomGen.NextInt(200, 600)));     //Ensimmäinen pari lohkareita vasemmalta.
        VihollinenAla(l, k, -400, (RandomGen.NextInt(-600, -200)));

        VihollinenYla(l, k, -200, (RandomGen.NextInt(200, 600)));     //Toinen pari lohkareita vasemmalta
        VihollinenAla(l, k, -200, (RandomGen.NextInt(-600, -200)));

        VihollinenYla(l, k, -50, (RandomGen.NextInt(200, 600)));      //Kolmas pari lohkareita vasemmalta.
        VihollinenAla(l, k, -50, (RandomGen.NextInt(-600, -200)));

    }
    /// <summary>
    /// Lohkareiden luonti. Niiden leveys ja korkeus.
    /// </summary>
    void Lohkareita()
    {
        double l = 100.0;    //Lohkareen leveys.
        double k = 100.0;    //Lohkareen korkeus.

        VihollinenYla(l, k, 50, (RandomGen.NextInt(100, 300)));       //Neljäs pari lohkareita vasemmalta.
        VihollinenAla(l, k, 50, (RandomGen.NextInt(-300, -100)));

        VihollinenYla(l, k, 300, (RandomGen.NextInt(100, 300)));      //Viides pari lohkareita vasemmalta.
        VihollinenAla(l, k, 300, (RandomGen.NextInt(-300, -100)));

        VihollinenYla(l, k, 400, (RandomGen.NextInt(100, 300)));      //Kuudes pari lohkareita vasemmalta.
        VihollinenAla(l, k, 400, (RandomGen.NextInt(-300, -100)));
    }

    /// <summary>
    /// Liikuteltavan hahmon luonti. Huom! Lisää kuva hahmolle.
    /// </summary>
    /// <param name="x">Hahmon x-koordinaatti luodessa hahmoa.</param>
    /// <returns>Palauttaa fysiikkaobjektin.</returns>
    PhysicsObject Sankari(double x)
    {
        Jones = new PhysicsObject(60.0, 65.0, Shape.Circle);
        Jones.Color = Color.Green;
        Jones.Mass = 10.00;
        Jones.X = x;
        Jones.Y = 0;
        Jones.Restitution = 0.05;
        Jones.Image = hahmo;
        Add(Jones);

        return Jones;
    }

    /// <summary>
    /// Sankarin tavoitelma aarre. Huom! Lisää kuva(aarrearkku tai vastaava).
    /// Sankarin osuessa arteeseen se häviää.
    /// </summary>
    /// <param name="x">Aarteen x-koordinaatti kentällä.</param>
    /// <returns>Palauttaa aarre fysiikkaobjektin.</returns>
    PhysicsObject Aarre(double x)
    {
        aarre = new PhysicsObject(40.0, 40.0, Shape.Rectangle);
        aarre.Color = Color.Yellow;
        aarre.Mass = 10.00;
        aarre.X = x;
        aarre.Y = 0;
        aarre.Restitution = 0.05;
        aarre.Image = kultarahat;
        Add(aarre);
        AddCollisionHandler(Jones, aarre, AarteenNappaaminen);

        return aarre;
    }

    /// <summary>
    /// Lohkaren luonti yläosaan.
    /// </summary>
    /// <param name="width">Leveys.</param>
    /// <param name="height">Korkeus.</param>
    /// <param name="x">x-koordinaatti.</param>
    /// <param name="y">y-koordinaatti.</param>
    /// <returns>Fysiikkaobjektin vihollinenYla.</returns>
    PhysicsObject VihollinenYla(double width, double height, double x, double y) //Ylapuoleisen vihollisen luonti.
    {
        vihollinenYla = new PhysicsObject(width, height, Shape.Rectangle);
        //vihollinen2.Mass = 10000.00;
        vihollinenYla.Restitution = 0.0;
        vihollinenYla.IgnoresCollisionResponse = true;
        vihollinenYla.X = x;
        vihollinenYla.Y = y;
        vihollinenYla.MoveTo(new Vector(x, 74 / 2), (RandomGen.NextInt(50, 250)));

        vihollinenYla.Image = lohkare;

        Add(vihollinenYla);
        AddCollisionHandler(Jones, vihollinenYla, SankarinMurskaantuminen); //LOPETA PELI JA tulosta pisteet.

        return vihollinenYla;

    }
    /// <summary>
    /// Luo lohkareita alaosasta.
    /// </summary>
    /// <param name="width">Leveys.</param>
    /// <param name="height">Korkeus.</param>
    /// <param name="x">x-koordinaatti.</param>
    /// <param name="y">y-koordinaatti.</param>
    /// <returns>Palauttaa fysiikkaolion.</returns>
    PhysicsObject VihollinenAla(double width, double height, double x, double y)    //Alapuoleisen vihollisen luonti.
    {
        vihollinenAla = new PhysicsObject(width, height, Shape.Rectangle);
        //vihollinenAla.Color = Color.Yellow;
        //vihollinen.Mass = 10000.0;
        vihollinenAla.Restitution = 0.0;
        vihollinenAla.IgnoresCollisionResponse = true;
        vihollinenAla.X = x;
        vihollinenAla.Y = y;
        vihollinenAla.MoveTo(new Vector(x, -74 / 2), (RandomGen.NextInt(50, 150)));

        vihollinenAla.Image = lohkare;

        Add(vihollinenAla);
        AddCollisionHandler(vihollinenAla, vihollinenYla, SavupolyJaMurskaus);
        AddCollisionHandler(Jones, vihollinenAla, SankarinMurskaantuminen); //LOPETA PELI JA tulosta pisteet.
        return vihollinenAla;
    }
    /// <summary>
    /// Luo savun ja tuhoaa yhteentörmänneet lohkareet.
    /// </summary>
    /// <param name="kappale1">Törmäyksessä oleva lohkare.</param>
    /// <param name="kappale2">Toinen törmäyksen lohkare.</param>
    void SavupolyJaMurskaus(PhysicsObject kappale1, PhysicsObject kappale2)
    {

        int pMaxMaara = 100;
        ExplosionSystem rajahdys = new ExplosionSystem(LoadImage("rajahdysKuva"), pMaxMaara);
        Add(rajahdys);
        double x = 150;
        double y = 0;
        double x2 = -150;
        int pMaara = 5;
        rajahdys.AddEffect(x, y, pMaara);
        rajahdys.AddEffect(x2, y, pMaara);

        CollisionHandler.DestroyBoth(kappale1, kappale2);
        MessageDisplay.Add("Lohkare murskaantui!");


    }

    /// <summary>
    /// Jones jää lohkareen alle. Murskaa sankarin ja kirjoittaa tekstin.
    /// </summary>
    /// <param name="tormaaja">Lohkare.</param>
    /// <param name="kohde">Sankari.</param>
    void SankarinMurskaantuminen(PhysicsObject tormaaja, PhysicsObject kohde)
    {
        CollisionHandler.DestroyObject(tormaaja, kohde);
        MessageDisplay.Add("Nyt sattui!");
        PysaytaAikaLaskuri();
    }

    /// <summary>
    /// Jones ottaa arteen haltuun ja kirjoittaa tekstin.
    /// </summary>
    /// <param name="tormaaja">Sankari Jones.</param>
    /// <param name="kohde">Aarre.</param>
    void AarteenNappaaminen(PhysicsObject tormaaja, PhysicsObject kohde)
    {

        CollisionHandler.DestroyTarget(tormaaja, kohde);
        MessageDisplay.Add("Nappasit 100 kultarahaa!");
        PysaytaAikaLaskuri();

    }

    /// <summary>
    /// Sankari hahmon liikuttelu nuolinäppäimillä vasemmalle ja oikealle.
    /// </summary>
    void AsetaOhjain()
    {
        Keyboard.Listen(Key.Right, ButtonState.Down, LiikutaSankaria, "Pelaaja 1: Liikkuu oikealle", Jones, nopeusOikea);
        Keyboard.Listen(Key.Right, ButtonState.Released, LiikutaSankaria, null, Jones, Vector.Zero);
        Keyboard.Listen(Key.Left, ButtonState.Down, LiikutaSankaria, "Pelaaja 1: Liikkuu vasemalle", Jones, nopeusVasen);
        Keyboard.Listen(Key.Left, ButtonState.Released, LiikutaSankaria, null, Jones, Vector.Zero);
    }

    /// <summary>
    /// Liikuttaa sankaria niin ettei se mene ruudusta yli reunoista.
    /// </summary>
    /// <param name="ruutu">sankari</param>
    /// <param name="nopeus">sankarin nopeus</param>
    private void LiikutaSankaria(PhysicsObject ruutu, Vector nopeus)
    {
        if (nopeus.X < 0 && (ruutu.Right > Level.Right))
        {
            ruutu.Velocity = Vector.Zero;
            return;
        }

        if ((nopeus.X > 0) && (ruutu.Left < Level.Left))
        {
            ruutu.Velocity = Vector.Zero;
            return;
        }
        ruutu.Velocity = nopeus;
    }
}
